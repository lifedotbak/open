<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-parent</artifactId>
	    <version>3.3.2</version>
	</parent>

	<groupId>com.spyker</groupId>
	<artifactId>open</artifactId>
	<version>1.0.0</version>
	<name>open</name>
	<description>open</description>

	<repositories>
		<repository>
			<!-- Maven 自带的中央仓库使用的Id为central 如果其他的仓库声明也是用该Id 就会覆盖中央仓库的配置 -->
			<id>default</id>
			<name>default</name>
			<url>https://mvnrepository.com/</url>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>maven-apache</id>
			<name>maven-apache</name>
			<url>https://repo.maven.apache.org/maven2/</url>
		</repository>
		<!-- ali仓库 -->
		<repository>
            <id>nexus-aliyun</id>
	        <name>nexus-aliyun</name>
	        <url>https://maven.aliyun.com/repository/public/</url>
	        <releases>
	            <enabled>true</enabled>
	        </releases>
	        <snapshots>
	            <enabled>false</enabled>
	        </snapshots>
	    </repository>
	</repositories>

	<properties>
		<code.encoding>UTF-8</code.encoding>
		<java.version>17</java.version>
		
		<!-- spring相关依赖版本 -->
		<!-- https://spring.io/projects/spring-cloud/ -->
		<springdoc-openapi-starter-webmvc-ui>2.6.0</springdoc-openapi-starter-webmvc-ui>
		<knife4j-openapi3-spring-boot-starter>4.5.0</knife4j-openapi3-spring-boot-starter>
		<spring-integration-redis>6.3.2</spring-integration-redis>
		
		<!-- 数据库相关依赖相关依赖版本 -->
		<!-- mybatis,mybatis-plus,mybatis-spring-boot 注意版本需要同步更新，否则会出错 -->
		<mybatis-spring-boot-starter>3.0.3</mybatis-spring-boot-starter>
		<mybatis-plus-boot-starter>3.5.7</mybatis-plus-boot-starter>
		<mybatis>3.5.16</mybatis>
		<mysql-connector-j>8.3.0</mysql-connector-j>
		<druid-spring-boot-starter>1.2.23</druid-spring-boot-starter>
		
		<!-- sa-token相关依赖版本 -->
		<sa-token-spring-boot3-starter>1.38.0</sa-token-spring-boot3-starter>
		
		<!-- 阿里云相关依赖版本 -->
		<aliyun-java-sdk-core>4.7.1</aliyun-java-sdk-core>
		<aliyun-sdk-oss>3.18.1</aliyun-sdk-oss>
		<aliyun-java-sdk-sts>3.1.2</aliyun-java-sdk-sts>
		<aliyun-java-sdk-dysmsapi>2.2.1</aliyun-java-sdk-dysmsapi>
		<aliyun-java-sdk-vod>2.16.22</aliyun-java-sdk-vod>
		<aliyun-java-sdk-push>3.13.14</aliyun-java-sdk-push>
		
		<!-- hutool相关依赖版本 -->
		<hutool>5.8.31</hutool>
		<!-- flyway相关依赖版本 -->
		<flywaydb>10.17.1</flywaydb>
		<!-- redisson相关依赖版本 -->
		<redisson-spring-boot-starter>3.34.1</redisson-spring-boot-starter>
		<!-- therapi相关依赖版本 -->
		<therapi-runtime-javadoc>0.15.0</therapi-runtime-javadoc>
		<!-- minio相关依赖版本 -->
		<minio>8.5.14</minio>
		<!-- 其他相关依赖版本 -->
		<java-jwt>4.4.0</java-jwt>
		<aws-java-sdk-s3>1.12.769</aws-java-sdk-s3>
		
		<json>20240303</json>
		<lombok>1.18.34</lombok>
		<xpp3>1.1.6</xpp3>
		<pinyin4j>2.5.1</pinyin4j>
		<camel-xstream>3.22.3</camel-xstream>
		<jakarta.annotation-api>3.0.0</jakarta.annotation-api>
		<crayfish-common-crc>1.0.1</crayfish-common-crc>
		<easyexcel>4.0.2</easyexcel>
		<fastjson2>2.0.48</fastjson2>
		<jackson-core>2.17.2</jackson-core>
		<aspectjweaver>1.9.22.1</aspectjweaver>
		<kaptcha>2.3.3</kaptcha>
		<dom4j>2.1.4</dom4j>
		<nashorn-core>15.4</nashorn-core>
		<jaxws-ri>4.0.3</jaxws-ri>
		<jjwt-api>0.12.5</jjwt-api>
		<logging-interceptor>5.0.0-alpha.14</logging-interceptor>
		<io.github.lunasaw.zlm-spring-boot-starter>1.0.3</io.github.lunasaw.zlm-spring-boot-starter>
		<com.yomahub.tlog-web-spring-boot-starter>1.5.2</com.yomahub.tlog-web-spring-boot-starter>
		<ko-time>2.4.4</ko-time>
		<flowable-spring-boot-starter>7.1.0</flowable-spring-boot-starter>
		<flowable-json-converter>6.8.1</flowable-json-converter>
		<mybatis-plus-join-boot-starter>1.4.13</mybatis-plus-join-boot-starter>
		<jib-maven-plugin>3.4.3</jib-maven-plugin>
		<xstream.version>1.4.21</xstream.version>
		<easypoi-spring-boot-starter.version>4.5.0</easypoi-spring-boot-starter.version>
		<logback-core.version>1.5.16</logback-core.version>
		<dependency-check-maven.version>11.1.1</dependency-check-maven.version>
		<commons-io.version>2.18.0</commons-io.version><httpmime.version>4.5.14</httpmime.version>
		<spring-security-crypto.version>6.4.3</spring-security-crypto.version>
		<google-java-format.version>1.25.2</google-java-format.version>
		
		<!-- spring-boot-maven-plugin 跳过测试打包 -->
		<skipTests>true</skipTests>
	</properties>

	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<env>dev</env>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<env>prod</env>
			</properties>
		</profile>
	</profiles>

	<dependencies>

		<!-- =======================================spring-cloud-commons基础依赖 ======================================= -->
		<!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-commons -->
		<!--		<dependency>-->
		<!--			<groupId>org.springframework.cloud</groupId>-->
		<!--			<artifactId>spring-cloud-commons</artifactId>-->
		<!--			<version>${spring-cloud-commons}</version>-->
		<!--		</dependency>-->
		
		<!-- =======================================spring-boot基础依赖 ======================================= -->
		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-autoconfigure -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-crypto -->
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-crypto</artifactId>
		    <version>${spring-security-crypto.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<!-- springboot推荐使用junit5，排除掉junit4相关 -->
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-context -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.springframework/spring-aop -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		
		<!--mqtt相关依赖 start -->
		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-stream</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-mqtt</artifactId>
		</dependency>
		<!--mqtt相关依赖 end -->
		
		<!-- Redis组件 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<!-- spring集成redis组件 -->
		<!-- https://mvnrepository.com/artifact/org.springframework.integration/spring-integration-redis -->
		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-redis</artifactId>
			<version>${spring-integration-redis}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-cache -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web-services -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-web-services</artifactId>
		</dependency>
		
		<!-- =======================================spring doc依赖 ======================================= -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>${springdoc-openapi-starter-webmvc-ui}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/com.github.xiaoymin/knife4j-openapi3-spring-boot-starter -->
		<dependency>
			<groupId>com.github.xiaoymin</groupId>
			<artifactId>knife4j-openapi3-spring-boot-starter</artifactId>
			<version>${knife4j-openapi3-spring-boot-starter}</version>
		</dependency>
		
		<!-- ======================================= mybatis-plus 相关依赖 ======================================= -->
		<!-- https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>${mybatis-spring-boot-starter}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/com.baomidou/mybatis-plus-boot-starter -->
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatis-plus-boot-starter</artifactId>
			<version>${mybatis-plus-boot-starter}</version>
		</dependency>

		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatis-plus-generator</artifactId>
			<version>${mybatis-plus-boot-starter}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis</artifactId>
		    <version>${mybatis}</version>
		</dependency>
		
		<!-- 模板引擎 -->
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
		</dependency>
		
		<!-- ======================================= 数据库链接 ======================================= -->
		<!-- https://mvnrepository.com/artifact/com.mysql/mysql-connector-j -->
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<version>${mysql-connector-j}</version>
		</dependency>
		
		<!-- ======================================= druid相关依赖 ======================================= -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
			<version>${druid-spring-boot-starter}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>${druid-spring-boot-starter}</version>
		</dependency>
		
		<!-- ======================================= redisson相关依赖 ======================================= -->
		<!-- https://mvnrepository.com/artifact/org.redisson/redisson-spring-boot-starter -->
		<dependency>
			<groupId>org.redisson</groupId>
			<artifactId>redisson-spring-boot-starter</artifactId>
			<version>${redisson-spring-boot-starter}</version>
		</dependency>
		<dependency>
			<groupId>org.redisson</groupId>
			<artifactId>redisson</artifactId>
			<version>${redisson-spring-boot-starter}</version>
		</dependency>
		<!-- redis依赖commons-pool 这个依赖一定要添加 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-pool2</artifactId>
		</dependency>
		
		<!-- ======================================= 数据库脚本同步工具 ======================================= -->
		<!-- https://mvnrepository.com/artifact/org.flywaydb/flyway-core -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>${flywaydb}</version>
		</dependency>
		<!-- 必须同时引入flyway-mysql，否则会报不支持mysql8.1版本数据库 -->
		<!-- https://mvnrepository.com/artifact/org.flywaydb/flyway-mysql -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-mysql</artifactId>
			<version>${flywaydb}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/com.aliyun/aliyun-java-sdk-core -->
		<dependency>
			<groupId>com.aliyun</groupId>
			<artifactId>aliyun-java-sdk-core</artifactId>
			<version>${aliyun-java-sdk-core}</version>
			<exclusions>
				<exclusion>
					<artifactId>bcprov-jdk15on</artifactId>
					<groupId>org.bouncycastle</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.aliyun/aliyun-java-sdk-sts -->
		<dependency>
			<groupId>com.aliyun</groupId>
			<artifactId>aliyun-java-sdk-sts</artifactId>
			<version>${aliyun-java-sdk-sts}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.aliyun.oss/aliyun-sdk-oss -->
		<dependency>
			<groupId>com.aliyun.oss</groupId>
			<artifactId>aliyun-sdk-oss</artifactId>
			<version>${aliyun-sdk-oss}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.aliyun/aliyun-java-sdk-dysmsapi -->
		<dependency>
			<groupId>com.aliyun</groupId>
			<artifactId>aliyun-java-sdk-dysmsapi</artifactId>
			<version>${aliyun-java-sdk-dysmsapi}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.aliyun/aliyun-java-sdk-vod -->
		<dependency>
			<groupId>com.aliyun</groupId>
			<artifactId>aliyun-java-sdk-vod</artifactId>
			<version>${aliyun-java-sdk-vod}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.aliyun/aliyun-java-sdk-push -->
		<dependency>
			<groupId>com.aliyun</groupId>
			<artifactId>aliyun-java-sdk-push</artifactId>
			<version>${aliyun-java-sdk-push}</version>
		</dependency>
		
		<!-- ======================================= minio相关依赖 ======================================= -->
		<!-- https://mvnrepository.com/artifact/io.minio/minio -->
		<dependency>
			<groupId>io.minio</groupId>
			<artifactId>minio</artifactId>
			<version>${minio}</version>
		</dependency>
		
		<!-- ======================================= therapi相关依赖 ======================================= -->
		<!--支持注释直接转swagger-ui -->
		<!-- https://mvnrepository.com/artifact/com.github.therapi/therapi-runtime-javadoc -->
		<dependency>
			<groupId>com.github.therapi</groupId>
			<artifactId>therapi-runtime-javadoc</artifactId>
			<version>${therapi-runtime-javadoc}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.github.therapi/therapi-runtime-javadoc-scribe -->
		<dependency>
			<groupId>com.github.therapi</groupId>
			<artifactId>therapi-runtime-javadoc-scribe</artifactId>
			<version>${therapi-runtime-javadoc}</version>
		</dependency>
		
		<!-- ======================================= sa-token依赖 ======================================= -->
		<!-- https://mvnrepository.com/artifact/cn.dev33/sa-token-spring-boot3-starter -->
		<dependency>
			<groupId>cn.dev33</groupId>
			<artifactId>sa-token-spring-boot3-starter</artifactId>
			<version>${sa-token-spring-boot3-starter}</version>
		</dependency>
		
		<!-- Sa-Token 整合 jwt 注意: sa-token-jwt 显式依赖 hutool-jwt 5.7.14 版本，保险起见：你的项目中要么不引入 hutool，要么引入版本 >= 5.7.14 的 hutool 版本。 hutool
			5.8.13 和 5.8.14 版本下会出现类型转换问题 -->
		<dependency>
			<groupId>cn.dev33</groupId>
			<artifactId>sa-token-jwt</artifactId>
			<version>${sa-token-spring-boot3-starter}</version>
			<exclusions>
				<exclusion>
					<artifactId>hutool-json</artifactId>
					<groupId>cn.hutool</groupId>
				</exclusion>
				<exclusion>
					<artifactId>hutool-core</artifactId>
					<groupId>cn.hutool</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/cn.dev33/sa-token-dao-redis-jackson -->
		<!-- Sa-Token 整合 Redis （使用 jdk 默认序列化方式） -->
		<dependency>
			<groupId>cn.dev33</groupId>
			<artifactId>sa-token-redis</artifactId>
			<version>${sa-token-spring-boot3-starter}</version>
		</dependency>

		<dependency>
			<groupId>cn.dev33</groupId>
			<artifactId>sa-token-temp-jwt</artifactId>
			<version>${sa-token-spring-boot3-starter}</version>
		</dependency>
		
		<!-- ======================================= hutool依赖 ======================================= -->
		<!-- https://mvnrepository.com/artifact/cn.hutool/hutool-all -->
		<dependency>
		    <groupId>cn.hutool</groupId>
		    <artifactId>hutool-all</artifactId>
		    <version>${hutool}</version>
		</dependency>
		
		<!-- ======================================= amazonaws依赖 ======================================= -->
		<!-- https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-s3 -->
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-s3</artifactId>
			<version>${aws-java-sdk-s3}</version>
		</dependency>
		
		<!-- ======================================= 其他相关依赖 ======================================= -->
		<!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectjweaver}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.json/json -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>${json}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/com.auth0/java-jwt -->
		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>${java-jwt}</version>
		</dependency>
		
		<!--lombok用来简化实体类：需要安装lombok插件 jdk17+需要lombok最低版本1.18.30 -->
		<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok}</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/com.belerweb/pinyin4j -->
		<dependency>
			<groupId>com.belerweb</groupId>
			<artifactId>pinyin4j</artifactId>
			<version>${pinyin4j}</version>
		</dependency>
		
		<!-- xstream最新升级版本 -->
		<!-- https://mvnrepository.com/artifact/org.apache.camel/camel-xstream -->
		<dependency>
		    <groupId>org.apache.camel</groupId>
		    <artifactId>camel-xstream</artifactId>
		    <version>${camel-xstream}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/com.thoughtworks.xstream/xstream -->
		<dependency>
		    <groupId>com.thoughtworks.xstream</groupId>
		    <artifactId>xstream</artifactId>
		    <version>${xstream.version}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.ogce/xpp3 -->
		<dependency>
			<groupId>org.ogce</groupId>
			<artifactId>xpp3</artifactId>
			<version>${xpp3}</version>
			<!-- springboot推荐使用junit5，排除掉junit4相关 -->
			<exclusions>
				<exclusion>
					<artifactId>junit</artifactId>
					<groupId>junit</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/jakarta.annotation/jakarta.annotation-api -->
		<dependency>
		    <groupId>jakarta.annotation</groupId>
		    <artifactId>jakarta.annotation-api</artifactId>
		    <version>${jakarta.annotation-api}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/com.github.sftwnd.crayfish.common/crayfish-common-crc -->
		<dependency>
			<groupId>com.github.sftwnd.crayfish.common</groupId>
			<artifactId>crayfish-common-crc</artifactId>
			<version>${crayfish-common-crc}</version>
		</dependency>
		
		<!-- 工具类相关 -->
		<!-- https://mvnrepository.com/artifact/com.alibaba/easyexcel -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>easyexcel</artifactId>
			<version>${easyexcel}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/com.alibaba.fastjson2/fastjson2 -->
		<dependency>
			<groupId>com.alibaba.fastjson2</groupId>
			<artifactId>fastjson2</artifactId>
			<version>${fastjson2}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>${jjwt-api}</version>
		</dependency>
		
		<!-- 验证码 -->
		<!-- https://mvnrepository.com/artifact/pro.fessional/kaptcha -->
		<dependency>
			<groupId>pro.fessional</groupId>
			<artifactId>kaptcha</artifactId>
			<version>${kaptcha}</version>
			<exclusions>
				<exclusion>
					<artifactId>servlet-api</artifactId>
					<groupId>javax.servlet</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.dom4j/dom4j -->
		<dependency>
            <groupId>org.dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>${dom4j}</version>
        </dependency>
		
		<!-- https://mvnrepository.com/artifact/com.sun.xml.ws/jaxws-ri -->
		<dependency>
		    <groupId>com.sun.xml.ws</groupId>
		    <artifactId>jaxws-ri</artifactId>
		    <version>${jaxws-ri}</version>
		    <type>pom</type>
		</dependency>
		
		<!-- okhttp 调试日志 -->
		<dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>logging-interceptor</artifactId>
            <version>${logging-interceptor}</version>
        </dependency>
		
		<!-- ZLMediaKit开源工具包 -->
		<!-- https://mvnrepository.com/artifact/io.github.lunasaw/zlm-spring-boot-starter -->
		<dependency>
		    <groupId>io.github.lunasaw</groupId>
		    <artifactId>zlm-spring-boot-starter</artifactId>
		    <version>${io.github.lunasaw.zlm-spring-boot-starter}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/cn.afterturn/easypoi-spring-boot-starter -->
		<dependency>
		    <groupId>cn.afterturn</groupId>
		    <artifactId>easypoi-spring-boot-starter</artifactId>
		    <version>${easypoi-spring-boot-starter.version}</version>
		</dependency>
		
		<!--TLog 是一款国产的轻量级分布式日志标记追踪组件。集成方便，通过对日志打标签的方式实现了微服务的链路追踪。
		支持 log4j、log4j2、logback 三大日志框架。支持 dubbo、dubbox、springcluod 三大RPC框架。-->
		<dependency>
            <groupId>com.yomahub</groupId>
            <artifactId>tlog-web-spring-boot-starter</artifactId>
            <version>${com.yomahub.tlog-web-spring-boot-starter}</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-beanutils</artifactId>
					<groupId>commons-beanutils</groupId>
				</exclusion>
				<exclusion>
					<artifactId>hutool-core</artifactId>
					<groupId>cn.hutool</groupId>
				</exclusion>
			</exclusions>
        </dependency>
		
		<!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-core -->
		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-core</artifactId>
		    <version>${logback-core.version}</version>
		</dependency>
		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-classic</artifactId>
		    <version>${logback-core.version}</version>
		</dependency>
		
		<!--从 JDK 1.8 开始，Nashorn取代Rhino(JDK 1.6, JDK1.7) 成为 Java 的嵌入式 JavaScript 引擎。
		Nashorn 完全支持 ECMAScript 5.1 规范以及一些扩展。它使用基于 JSR 292 的新语言特性
		，其中包含在 JDK 7 中引入的 invokedynamic，将 JavaScript 编译成 Java 字节码。
			与先前的 Rhino 实现相比，这带来了 2 到 10倍的性能提升。 -->
		<!--为了支持jdk17 如果使用jdk17 请引入-->
		<dependency>
            <groupId>org.openjdk.nashorn</groupId>
            <artifactId>nashorn-core</artifactId>
            <version>${nashorn-core}</version>
			<exclusions>
				<exclusion>
					<artifactId>asm-commons</artifactId>
					<groupId>org.ow2.asm</groupId>
				</exclusion>
			</exclusions>
        </dependency>
		
		<!--koTime是一个轻量级的springboot项目性能分析工具，通过追踪方法调用链路以及对应的运行时长快速定位性能瓶颈-->
		<!-- https://mvnrepository.com/artifact/cn.langpy/ko-time -->
		<dependency>
		    <groupId>cn.langpy</groupId>
		    <artifactId>ko-time</artifactId>
		    <version>${ko-time}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/com.github.yulichang/mybatis-plus-join-boot-starter -->
		<!-- mybatis-plus做连接查询的插件 -->
		<dependency>
            <groupId>com.github.yulichang</groupId>
            <artifactId>mybatis-plus-join-boot-starter</artifactId>
            <version>${mybatis-plus-join-boot-starter}</version>
        </dependency>
		
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-core</artifactId>
		    <version>${jackson-core}</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>${jackson-core}</version>
		</dependency>
		
		<dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>${httpmime.version}</version>
        </dependency>
		
		<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
		<dependency>
		    <groupId>commons-io</groupId>
		    <artifactId>commons-io</artifactId>
		    <version>${commons-io.version}</version>
		</dependency>
	
	</dependencies>
	
	<build>
		<finalName>open</finalName>
		<resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**</include>
                </includes>
            </resource>
        </resources>
		<plugins>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
                        <nonFilteredFileExtension>woff</nonFilteredFileExtension>
                        <nonFilteredFileExtension>woff2</nonFilteredFileExtension>
                        <nonFilteredFileExtension>otf</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<includeSystemScope>true</includeSystemScope>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<encoding>${code.encoding}</encoding><!-- 字符集编码 -->
		            <source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
			<!-- =============Jib 是一个 Maven 和 Gradle 插件，用来创建Docker镜像===================== -->
				<!-- https://mvnrepository.com/artifact/com.google.cloud.tools/jib-maven-plugin -->
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>${jib-maven-plugin}</version>
			</plugin>
			<!-- ============dependency-check-mave依赖漏洞检查======================================= -->
			<plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
				<version>${dependency-check-maven.version}</version>
				<executions>
	                <execution>
	                    <goals>
	                        <goal>check</goal>
	                    </goals>
	                </execution>
				</executions>
				<!-- https://mvnrepository.com/artifact/com.google.googlejavaformat/google-java-format -->
            </plugin>
			<plugin>
                <!-- https://mvnrepository.com/artifact/com.google.googlejavaformat/google-java-format -->
				<groupId>com.google.googlejavaformat</groupId>
				<artifactId>google-java-format</artifactId>
				<version>${google-java-format.version}</version>
				<configuration>
	            <formatterOptions>
	              <!-- Use AOSP style instead of Google Style (4-space indentation). -->
		            <googleJavaFormat.aosp>false</googleJavaFormat.aosp>
		            <!-- Format the javadoc -->
		            <googleJavaFormat.formatJavadoc>true</googleJavaFormat.formatJavadoc>
		            <!-- Fix import order and remove any unused imports, but do no other formatting. -->
		            <googleJavaFormat.fixImportsOnly>false</googleJavaFormat.fixImportsOnly>
		            <!-- Do not fix the import order. Unused imports will still be removed. -->
		            <googleJavaFormat.skipSortingImports>false</googleJavaFormat.skipSortingImports>
		            <!-- Do not remove unused imports. Imports will still be sorted. -->
		            <googleJavaFormat.skipRemovingUnusedImports>false</googleJavaFormat.skipRemovingUnusedImports>
	            </formatterOptions>
	          </configuration>
            </plugin>
		</plugins>
	</build>

</project>
